package com.shachar.first;

import java.text.DateFormat;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.Collection;
import java.util.Date;

import org.joda.time.Period;
import org.joda.time.format.PeriodFormat;
import org.joda.time.format.PeriodFormatter;
import org.joda.time.format.PeriodFormatterBuilder;
public class Utils {
	public static double formatNumber(double num) {
		DecimalFormat df = new DecimalFormat("#.##");
		return Double.valueOf(df.format(num));
	}

	public static int sum(Collection<Integer> numbers) {
		int sum = 0;
		for (int num : numbers) {
			sum += num;
		}
		return sum;
	}

	public static Date getDate() {
		return new Date();
		
	}

	public static String getPeriod(Date date) {
		PeriodFormatter formatter = new PeriodFormatterBuilder().appendDays().appendSuffix("d");
		Period period = new Period(date.getTime(), (new Date()).getTime());
		String diff = Math.abs(period.getDays()) + "ימים ";
		if (diff == "0 ימים") {
			diff = Math.abs(period.getHours()) + "שעות ";
			if (diff == "0 שעות") {
				diff = Math.abs(period.getMinutes()) + "דקות ";
				if (diff == "0 דקות") {
					diff = Math.abs(period.getSeconds()) + "שניות ";
				}
			}
		}
		return period.toString();
	}

	public static String formatDatabaseDate(Date date) {
		DateFormat formatter = new SimpleDateFormat("yyyy-MM-dd hh:mm:ss");
		return formatter.format(date);
	}

	public static String formatDate(Date date) {
		DateFormat formatter = new SimpleDateFormat("dd/MM/yyyy hh:mm");
		return formatter.format(date);
	}

	public static void main(String args[]) {
		System.out.println(formatNumber(102.3434));
	}

}
