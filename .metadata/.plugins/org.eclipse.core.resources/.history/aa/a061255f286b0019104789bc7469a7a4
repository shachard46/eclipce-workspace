package com.shachar.first;

import java.text.DateFormat;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.Period;
import java.time.ZoneId;
import java.time.temporal.ChronoUnit;
import java.util.Collection;
import java.util.Date;

public class Utils {
	public static double formatNumber(double num) {
		DecimalFormat df = new DecimalFormat("#.##");
		return Double.valueOf(df.format(num));
	}

	public static int sum(Collection<Integer> numbers) {
		int sum = 0;
		for (int num : numbers) {
			sum += num;
		}
		return sum;
	}

	public static Date getDate() {
		return new Date();
	}

	public static String getPeriod(Date date) {
		LocalDate ld = date.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
		LocalDate now = (new Date()).toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
		Period period = new Periodld, now);
		long diff = Math.abs(period.getDays());
//		if (diff == 0) {
//			diff = Math.abs(period.get(ChronoUnit.HOURS));
//			if (diff == 0) {
//				diff = Math.abs(period.get(ChronoUnit.MINUTES));
//				if (diff == 0) {
//					diff = Math.abs(period.get(ChronoUnit.SECONDS));
//				}
//			}
//		}
		return period.toString();
	}

	public static String formatDatabaseDate(Date date) {
		DateFormat formatter = new SimpleDateFormat("yyyy-MM-dd hh:mm:ss");
		return formatter.format(date);
	}

	public static String formatDate(Date date) {
		DateFormat formatter = new SimpleDateFormat("dd/MM/yyyy hh:mm");
		return formatter.format(date);
	}

	public static void main(String args[]) {
		System.out.println(formatNumber(102.3434));
	}

}
